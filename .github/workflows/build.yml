name: Build


on:
  workflow_call:
    inputs:
      BUILD_TYPE:
        description: Type of build (Debug, Release, RelWithDebInfo, MinSizeRel)
        type: string
        default: Release

      need-commit-id:
        description: If needed, put in 1
        type: string

      override-version :
        description: Override version number
        type: string

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix

    strategy:
      matrix:
        include:
          - os: windows-latest
            artifact_name: BallKiller3000-Windows-x64
            executable_name: BallKiller3000.exe

          - os: windows-latest
            artifact_name: BallKiller3000-Windows-MSVC-x64
            executable_name: BallKiller3000.exe


          - os: ubuntu-latest
            artifact_name: BallKiller3000-linux
            executable_name: BallKiller3000

          - os: ubuntu-latest
            artifact_name: BallKiller3000-HTML5
            executable_name: index.html


    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Install Dependencies (linux)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt update
          sudo apt install ninja-build libasound2-dev libx11-dev libxrandr-dev libxi-dev libgl1-mesa-dev libglu1-mesa-dev libxcursor-dev libxinerama-dev

      - name: Install and set up Emscripten SDK (HTML5)
        if: ${{ matrix.executable_name == 'index.html' }}
        run: |
          git clone https://github.com/emscripten-core/emsdk.git  
          cd emsdk
          ./emsdk install latest
          ./emsdk activate latest
          cd ..

      - name: Set up MSVC
        if: ${{   matrix.artifact_name == 'BallKiller3000-Windows-MSVC-x64'}}
        uses: ilammy/msvc-dev-cmd@v1


      - name: Set build number
        if: ${{inputs.need-commit-id == '1' }}
        shell: bash
        run: |
          ver_short=`git rev-parse --short HEAD`
          echo "VERSION=$ver_short" >> $GITHUB_ENV

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        if: ${{ matrix.executable_name != 'index.html' && matrix.artifact_name != 'BallKiller3000-Windows-MSVC-x64' }}
        run: cmake -G Ninja  -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{inputs.BUILD_TYPE}} -DCOMMIT_HASH=${{env.VERSION}} -DVERSION_OVERRIDE=${{inputs.override-version}}

      - name: Configure CMake (MSVC)
        if: ${{   matrix.artifact_name == 'BallKiller3000-Windows-MSVC-x64'}}
        run: cmake  -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{inputs.BUILD_TYPE}} -DCOMMIT_HASH=${{env.VERSION}} -DVERSION_OVERRIDE=${{inputs.override-version}}

      - name: Configure CMake (HTML5)
        if: ${{ matrix.executable_name == 'index.html' }}
        run: cmake -B build -G Ninja -DPLATFORM=Web "-DCMAKE_TOOLCHAIN_FILE=./emsdk/upstream/emscripten/cmake/Modules/Platform/Emscripten.cmake"  -DCMAKE_BUILD_TYPE=${{inputs.BUILD_TYPE}}  -DCOMMIT_HASH=${{env.VERSION }} -DVERSION_OVERRIDE=${{inputs.override-version}}


      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{inputs.BUILD_TYPE}}


      - name: Prepare site files (HTML5)
        if: ${{ matrix.executable_name == 'index.html' }}
        run: |
          mkdir install
          mv ${{github.workspace}}/build/BallKiller3000.html  ${{github.workspace}}/install/${{ matrix.executable_name }}
          mv ${{github.workspace}}/build/BallKiller3000.*  ${{github.workspace}}/install/
          mv ${{github.workspace}}/.github/custom/online/README.*  ${{github.workspace}}/install/


      - name: Prepare Executable
        if: ${{ matrix.executable_name != 'index.html' }}
        run: cmake --install build --component BallKiller3000 --prefix install

      - name: Upload BallKiller3000
        uses: actions/upload-artifact@v3.1.1
        with:
          # Artifact name
          name: ${{ matrix.artifact_name }}

          # A file, directory or wildcard pattern that describes what to upload
          path: ${{github.workspace}}/install