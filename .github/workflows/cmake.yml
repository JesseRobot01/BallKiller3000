name: CMake

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  
jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    strategy:
     matrix:
      include:
        - os: windows-latest
          artifact_name: BallKiller3000-Windows-x64
          executable_name: ball_killer.exe
         
       # - os: ubuntu-latest
        #  artifact_name: BallKiller3000-Linux-x64
         # executable_name: UNKNOWN
         
        - os:  macos-latest
          artifact_name: BallKiller3000-macOS-x64
          executable_name: UNKNOWN
        
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    
    # Installs some requierd build tools
    - name: Install Dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get -y update
        sudo apt-get -y install ninja-build libasound2-dev libx11-dev libxrandr-dev libxi-dev libgl1-mesa-dev libglu1-mesa-dev libxcursor-dev libxinerama-dev

    - name: Install Dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew update
        brew install ninja 

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -G Ninja -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
    

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    #temporarly list build files to see wich one to upload for each system
    - name: List Files
      run: ls ${{github.workspace}}/build
  
    - name: Upload BallKiller3000
      uses: actions/upload-artifact@v3.1.1
      with:
        # Artifact name
        name: ${{ matrix.artifact_name }}
        # A file, directory or wildcard pattern that describes what to upload
        path: ${{github.workspace}}/build/${{ matrix.executable_name }}
